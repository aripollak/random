#!/usr/ruby
# Displays the status of Logitech USB mice in the GNOME/KDE notification area.
# Requires: lomoco
#
# (c) 2006 Ari Pollak
# You may not look at this program.
=begin
Ideas for generic framework:
- options: iconfile, trigger iconfile/program/color/yes/no;
  show icon only when triggered?; trigger command/file; trigger regex/range;
  blink icon when triggered?; check exit status or output?
=end

require 'gtktrayicon'

class LogiTray < Gtk::TrayIcon
    # mouse image in gdk-pixbuf-csource format
    MOUSE_PIXBUF_STR = \
    "GdkP" +
    "\0\0\7""1" + # length
    "\2\1\0\2" + # pixdata_type
    "\0\0\0\200" + # rowstride
    "\0\0\0\40" + # width
    "\0\0\0\40" + # height
    "\254\0\0\0\0\10\356\356\353S\233\234\227\310\177\204}\377t\200v\377v" +
    "\202t\377\212\217\206\377\253\253\244\377\360\360\356=\227\0\0\0\0\12" +
    "\247\247\245\222MQL\337\201\220\211\377\210\230\222\377frl\377nyq\377" +
    "\227\246\237\377\232\247\240\377t{n\377\266\267\254o\225\0\0\0\0\2\220" +
    "\221\215\377PUR\377\202\213\234\226\377\10^ec\377\206\243\241\377\230" +
    "\264\265\377~\206}\377\256\273\266\377\263\276\272\377\201\211\177\377" +
    "\235\241\230\377\223\0\0\0\0\16\307\306\302\13""9=6\377\217\237\231\377" +
    "\214\235\227\377\212\233\225\377T]V\377\276\307\302\377\237\250\242\377" +
    "\206\213\203\377\302\307\305\377\304\310\307\377\306\312\314\377z|p\377" +
    "\300\310\304I\222\0\0\0\0\16OPI\340x\206}\377\221\242\234\377\216\237" +
    "\231\377\203\224\216\377Tkk\377>B6\377RXH\377~\221\217\377\273\300\274" +
    "\377\321\325\325\377\327\333\336\377\307\314\315\377pvf\377\221\0\0\0" +
    "\0\20\354\354\352\37\40#\36\340\222\243\235\377\223\244\236\377\216\236" +
    "\230\377l{v\377Stv\377\"+\"\377X_M\377\213\245\243\377\252\253\253\377" +
    "\332\336\341\377\340\344\347\377\344\350\351\377uwg\377\327\341\3402" +
    "\220\0\0\0\0\20\304\303\301003.\352\221\242\234\377\222\243\235\377\215" +
    "\236\230\377\214\235\227\377PYV\3775=9\377:>1\377\214\224\213\377\344" +
    "\350\352\377\344\350\353\377\347\353\356\377\353\356\362\377\217\217" +
    "\201\377\267\303\276@\220\0\0\0\0\4\270\267\265A-1,\352\216\237\231\377" +
    "\221\242\234\377\202\216\237\231\377\12RZX\377\237\254\247\377\246\262" +
    "\257\377\236\242\232\377\355\361\363\377\352\356\361\377\354\360\363" +
    "\377\357\362\366\377\226\225\210\377\254\270\263@\220\0\0\0\0\20\310" +
    "\310\305\37\34\36\33\377\214\235\227\377\220\241\233\377\217\240\232" +
    "\377\222\243\235\377]fc\377\233\245\244\377\260\313\317\377\236\237\227" +
    "\377\362\364\370\377\360\364\367\377\361\365\370\377\361\365\371\377" +
    "\207\206y\377\257\273\271<\220\0\0\0\0\13\350\350\346*\17\20\14\377\177" +
    "\216\211\377\217\237\231\377\221\241\234\377\231\246\242\377\212\223" +
    "\221\377c\201\200\377\261\314\317\377\243\250\241\377\363\366\371\377" +
    "\202\363\367\372\377\3\363\366\370\377efR\377\270\311\312W\221\0\0\0" +
    "\0\17)*%\377Zf`\377\215\237\230\377\222\243\234\377\236\252\246\377\256" +
    "\273\266\377PUQ\377ci^\377\336\341\343\377\363\367\371\377\363\367\372" +
    "\377\363\366\371\377\321\324\321\377OT<\273\316\340\343\35\221\0\0\0" +
    "\0\11Va_\3773:2\377\211\237\231\377\227\243\241\377\243\257\253\377\264" +
    "\275\272\377jlf\377`cX\377\353\356\360\377\202\363\367\372\377\4\343" +
    "\350\352\377\234\237\227\377FWL\354\354\365\366T\221\0\0\0\0\16\201\224" +
    "\227\377!\37\27\377O\216\224\377\227\251\246\377\245\261\255\377\262" +
    "\273\270\377ayx\377\246\313\321\377\265\271\264\377\363\366\373\377\344" +
    "\351\354\377\257\324\331\377`aT\377Fig\377\222\0\0\0\0\16\242\277\310" +
    "^.0\37\377Wc\\\377\214\253\254\377\250\262\257\377\265\276\273\377bk" +
    "h\377tzv\377\314\320\316\377\362\366\371\377\326\342\343\377\234\270" +
    "\272\377HC3\377K\202\215\377\222\0\0\0\0\16\271\331\340\40""1C;\377:" +
    ";5\377\231\257\255\377\244\256\252\377\254\265\262\377\274\304\302\377" +
    "\317\323\325\377\341\345\350\377\354\362\364\377\336\343\346\377\210" +
    "\225\220\377B\77,\377T\236\262\377\222\0\0\0\0\16\311\337\343\24)TX\377" +
    "21\"\377\203\217\212\377\246\262\256\377\242\256\252\377\253\266\262" +
    "\377\276\307\304\377\324\331\333\377\344\350\353\377\324\330\333\377" +
    "]aU\3777\77""2\377`\262\316\377\222\0\0\0\0\16\324\342\340\32\"\\i\377" +
    "76$\377t|s\377\246\262\256\377\236\252\246\377\240\254\250\377\260\273" +
    "\270\377\310\315\315\377\332\336\340\377\343\347\351\377AA3\377.D>\377" +
    "f\267\320\377\222\0\0\0\0\16\315\330\3248\34g~\37787'\377\\aX\377\247" +
    "\263\257\377\236\252\246\377\226\242\236\377\241\256\251\377\270\276" +
    "\274\377\314\320\321\377\310\314\315\37731#\377*B\77\377a\260\307\377" +
    "\222\0\0\0\0\16\271\304\2770\35g\177\352:8(\377KLD\377\247\263\257\377" +
    "\236\252\246\377\217\235\230\377\221\242\234\377\246\257\254\377\271" +
    "\277\275\377\247\252\251\377+)\35\377+::\377P\236\266\377\222\0\0\0\0" +
    "\16\242\257\252\250\40cx\37797'\377=>6\377\247\263\257\377\236\252\246" +
    "\377\231\246\241\377\222\237\233\377\233\246\242\377\247\261\256\377" +
    "\215\224\221\377\37\35\24\377+.'\377;\211\243\364\222\0\0\0\0\17\206" +
    "\240\230o$[f\35242\"\37723,\377\247\263\257\377\237\253\247\377\264\300" +
    "\274\377\243\257\253\377\231\245\241\377\236\252\246\377|\206\202\377" +
    "\26\24\15\377$$\32\377.u\220\340\352\353\347:\221\0\0\0\0\17n\221\225" +
    "h(IL\377)(\31\377)*%\377\252\266\262\377\244\260\254\377\242\256\252" +
    "\377\236\252\246\377\241\255\251\377\232\246\242\377t\202}\377\20\21" +
    "\11\377\40!\24\377+g~\377\336\342\335.\221\0\0\0\0\17c\215\225}(20\377" +
    "\33\34\24\377&($\377\256\267\264\377\246\262\256\377\234\251\245\377" +
    "\224\244\236\377\223\243\236\377\222\242\234\377s\202}\377\17\20\12\377" +
    "\37\35\25\377)[n\377\335\342\337*\221\0\0\0\0\17p\225\235}\34\37\36\377" +
    "\23\23\16\377+.*\377\257\271\266\377\250\264\260\377\232\247\243\377" +
    "\220\241\233\377\215\236\230\377\213\234\226\377v\206\200\377\16\16\12" +
    "\377\40\36\25\377-S^\377\350\355\355\77\221\0\0\0\0\16\230\261\276\252" +
    "\23\27\23\377\20\17\12\377:>:\377\252\266\262\377\246\262\256\377\227" +
    "\245\240\377\214\235\227\377\206\227\221\377\203\224\216\377|\214\207" +
    "\377\21\22\17\377!\40\24\3779U[\377\222\0\0\0\0\16\325\343\347Y\25\36" +
    "\37\377\20\20\11\377JRN\377\234\250\244\377\232\252\244\377\215\236\230" +
    "\377\204\225\217\377\200\221\213\377{\214\206\377w\210\202\377%+&\377" +
    "''\32\377az\200\377\223\0\0\0\0\15Tho\377\21\22\13\377fqm\377\210\227" +
    "\222\377\213\233\225\377\203\224\216\377|\215\207\377y\212\204\377v\207" +
    "\201\377w\210\202\377KUP\37701&\377\266\312\321\211\223\0\0\0\0\14\341" +
    "\351\353&;EJ\265\204\223\216\377\202\223\215\377\200\221\213\377{\214" +
    "\206\377w\210\202\377u\206\200\377y\212\204\377\204\225\217\377}\214" +
    "\211\377{\222\230\377\225\0\0\0\0\12\347\353\354&\211\232\231\364}\216" +
    "\210\364\205\225\216\255\202\223\215\360\200\221\213\377\203\224\217" +
    "\321\211\232\222\236~\225\221\352\255\301\307\230\230\0\0\0\0\7\323\333" +
    "\335R\245\266\266-\224\247\250_\224\247\250\250\237\257\257\212\266\304" +
    "\306h\355\363\363@\254\0\0\0\0"

    MOUSE_PIXBUF_ARR = MOUSE_PIXBUF_STR.unpack("C*")

=begin
    class MouseImage < Gtk::DrawingArea
        def initialize
            super()
            signal_connect("expose_event", &method(:expose))
        end

        def expose(widget, event)
            context = widget.window.create_cairo_context


        end
    end
=end

    def initialize
        super("Logitray")
        @tooltips = Gtk::Tooltips.new

        @mouse_pixbuf = Gdk::Pixbuf.new(MOUSE_PIXBUF_ARR, false)
        #@mouse_pixbuf.save("mouse.png", "png")
        @imagebox = Gtk::EventBox.new.add(Gtk::Image.new(@mouse_pixbuf))
        @imagebox.signal_connect("button_press_event", &method(:tray_handler))
        @imagebox.signal_connect("scroll_event", &method(:tray_handler))
        #@imagebox.signal_emit("button_press_event", nil)
        add(@imagebox)
    end

    def run
        show_all()

        update_info()
        Gtk.timeout_add(10000, &method(:update_info))
        
        Gtk.main()
    end

    def tray_handler(widget, event)
        if event.is_a? Gdk::EventButton
            if event.button == 1
                update_info()
            end
#            Gtk.main_quit
        elsif event.is_a? Gdk::EventScroll
            p event.direction
        else
            raise "Unhandled event: " + event.event_type.to_s
        end
    end

    def update_info
        output = `lomoco -i 2>&1`
        output.strip!
        begin
            text, level = output.match(/Battery status: (\d)/)[0..1]
        rescue NoMethodError
        end
        level = level.to_i

        if @prev_output != output
            @tooltips.set_tip(@imagebox, output, nil)
            @prev_output = output
        end

        if @prev_level != level
            if level <= 4
                icon_pixbuf = @imagebox.render_icon(Gtk::Stock::NO,
                                                    Gtk::IconSize::MENU)
                mouse_pixbuf = @mouse_pixbuf.dup
                mouse_pixbuf.composite!(icon_pixbuf, 8, 8,
                                        mouse_pixbuf.width - 8,
                                        mouse_pixbuf.height - 8,
                                        (mouse_pixbuf.width - 
                                          icon_pixbuf.width) / 2,
                                        (mouse_pixbuf.height - 
                                          icon_pixbuf.height) / 2,
                                        1, 1,
                                        Gdk::Pixbuf::INTERP_BILINEAR,
                                        200)
                @imagebox.child.pixbuf = mouse_pixbuf
            else
                @imagebox.child.pixbuf = @mouse_pixbuf
            end
            @prev_level = level
        end

        return true
    end
end

tray = LogiTray.new
tray.run()

# vim: set et ts=4 sts=4 sw=4:
